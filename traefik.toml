#debug = true

logLevel = "ERROR" #DEBUG, INFO, WARN, ERROR, FATAL, PANIC
InsecureSkipVerify = true 
defaultEntryPoints = ["https", "http"]

# WEB interface of Traefik - it will show web page with overview of frontend and backend configurations 
[api]
  entryPoint = "dashboard"
  dashboard = true
  address = ":8080"

# Force HTTPS
[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]

[entryPoints.dashboard]
address = ":8080"
[entryPoints.dashboard.auth]
    [entryPoints.dashboard.auth.basic]
        users = ["user:$encryptedpass"]
[retry]

[file]
  watch = true
  filename = "/etc/traefik/rules.toml"

# Let's encrypt configuration
[acme]
email = "admin@mydomain.me"
storage="/etc/traefik/acme/acme.json"
caServer = "https://acme-v02.api.letsencrypt.org/directory" #This one is for Production
#caServer = "https://acme-staging-v02.api.letsencrypt.org/directory" #For staging and testing
entryPoint = "https"
acmeLogging=true 
onDemand = false #create certificate when container is created
#onHostRule = true #disable for wildcard domains
# Use a HTTP-01 acme challenge rather than TLS-SNI-01 challenge
#[acme.httpChallenge] #does not work with wildcard domains, use dns challenge
#  entryPoint = "http" #does not work with wildcard domains
[acme.dnsChallenge]
provider = "cloudflare"
delayBeforeCheck = 0
[[acme.domains]]
main = "mydomain.me"
#   sans = ["name.mydomain.net"]
[[acme.domains]]
main = "*.mydomain.me"
[traefikLog]
filePath = "/etc/traefik/traefik.log"
   
# Connection to docker host system (docker.sock)
[docker]
endpoint = "tcp://localhost:2375"
domain = "mydomain.me"
watch = true
# This will hide all docker containers that don't have explicitly  
# set label to "enable"
exposedbydefault = false
